<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="MAIN" Id="{a9276fae-2b8f-4b86-a5ea-ccb7b5233763}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
	fSetAlarm : FB_SetAlarm;
	fCoreSwaging: FB_CoreSwaging;
    fOilPump: FB_OilPump;
    fCorePress: FB_CorePress;
    fCasingVibratoryBowl1: FB_CasingVibratoryBowl1;
    fCoreVibratoryBowl2: FB_CoreVibratoryBowl2;
	fTransmitStatesToHMI: FB_TransmitStatesToHMI;

	pAlarm : POINTER TO SINT;
	i : INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[GVL_HMI.bSafeties := GVL_IO.DI_24VDC_CB_OK AND GVL_IO.DI_ESR1 AND GVL_IO.DI_LS1 AND GVL_IO.DI_TS1 AND GVL_IO.DI_PS1;

// accept commands
IF GVL_HMI.i_nCmd_ClearCount = 1 THEN GVL_HMI.i_nCmd_ClearCount := 2; END_IF
IF GVL_HMI.i_nCmd_Reset = 1 THEN GVL_HMI.i_nCmd_Reset := 2; END_IF
IF GVL_HMI.i_nCmd_ResetSetting = 1 THEN GVL_HMI.i_nCmd_ResetSetting := 2; END_IF
IF GVL_HMI.i_nCmd_ResetAlarm = 1 THEN GVL_HMI.i_nCmd_ResetAlarm := 2; END_IF

// reset alarm
IF GVL_HMI.i_nCmd_ResetAlarm = 2 THEN
	GVL_HMI.o_bAlarmActive := FALSE;
	pAlarm := ADR(GVL_HMI.nAlarmSafeties);
	FOR i := 0 TO 20 DO
		pAlarm[i] := 0;
	END_FOR
END_IF

// reset
IF GVL_HMI.i_nCmd_Reset = 2 THEN
	GVL_HMI.o_bAlarmActive := FALSE;
END_IF

// reset setting
IF GVL_HMI.i_nCmd_ResetSetting = 2 THEN
	GVL_HMI.i_nCoreSwagingMode:= 0;	// 0: Auto, 1: Manual
	GVL_HMI.i_nCasingCountForStarting := GVL_InitialSetting.CASING_COUNT_FOR_STARTING;
	GVL_HMI.i_nCoreCountForStarting := GVL_InitialSetting.CORE_COUNT_FOR_STARTING;
	GVL_HMI.i_nPumpFeedbackCheckingTime := GVL_InitialSetting.PUMP_FeedbackCheckingTime; // ms
	GVL_HMI.i_nCylinderFeedbackCheckingTime := GVL_InitialSetting.CYLINDER_FeedbackCheckingTime; // ms
	GVL_HMI.i_nPCylinder1ExtendedRunningTime := GVL_InitialSetting.PCYLINDER1EXTENDED_RunningTime; // ms
	GVL_HMI.i_nCylinder3ExtendedRunningTime := GVL_InitialSetting.CYLINDER3EXTENDED_RunningTime; // ms
	GVL_HMI.i_nCylinder1ExtendedRunningTime := GVL_InitialSetting.CYLINDER1EXTENDED_RunningTime; // ms
	GVL_HMI.i_nPCylinder1RetractedRunningTime := GVL_InitialSetting.PCYLINDER1RETRACTED_RunningTime; // ms
	GVL_HMI.i_nCylinder3RetractedRunningTime := GVL_InitialSetting.CYLINDER3RETRACTED_RunningTime; // ms
	GVL_HMI.i_nCylinder1RetractedRunningTime := GVL_InitialSetting.CYLINDER1RETRACTED_RunningTime; // ms
	GVL_HMI.i_nPCylinder2ExtendedRunningTime := GVL_InitialSetting.PCYLINDER2EXTENDED_RunningTime; // ms
	GVL_HMI.i_nCylinder4ExtendedRunningTime := GVL_InitialSetting.CYLINDER4EXTENDED_RunningTime; // ms
	GVL_HMI.i_nCylinder2ExtendedRunningTime := GVL_InitialSetting.CYLINDER2EXTENDED_RunningTime; // ms
	GVL_HMI.i_nCylinder4RetractedRunningTime := GVL_InitialSetting.CYLINDER4RETRACTED_RunningTime; // ms
	GVL_HMI.i_nCylinder2RetractedRunningTime := GVL_InitialSetting.CYLINDER2RETRACTED_RunningTime; // ms
	GVL_HMI.i_nPCylinder3ExtendedRunningTime := GVL_InitialSetting.PCYLINDER3EXTENDED_RunningTime; // ms
	GVL_HMI.i_nPCylinder5ExtendedRunningTime := GVL_InitialSetting.PCYLINDER5EXTENDED_RunningTime; // ms
	GVL_HMI.i_nPCylinder4ExtendedRunningTime := GVL_InitialSetting.PCYLINDER4EXTENDED_RunningTime; // ms
	GVL_HMI.i_nPE4MaintainTime := GVL_InitialSetting.PE4_MaintainTime; // ms
	GVL_HMI.i_nPCylinder6ExtendedRunningTime := GVL_InitialSetting.PCYLINDER6EXTENDED_RunningTime; // ms
	GVL_HMI.i_nPE6MaintainTime := GVL_InitialSetting.PE6_MaintainTime; // ms
END_IF

IF NOT GVL_HMI.o_bAlarmActive THEN
	IF GVL_IO.DI_PS1 THEN
		GVL_HMI.nAlarmS_PS1 := 1;
	ELSE
		GVL_HMI.nAlarmS_PS1 := -1;
		GVL_HMI.nAlarmSafeties := -1;
		fSetAlarm( sMsg := GVL_AlarmMessage.PS1 );
	END_IF
	IF GVL_IO.DI_TS1 THEN
		GVL_HMI.nAlarmS_TS1 := 1;
	ELSE
		GVL_HMI.nAlarmS_TS1 := -1;
		GVL_HMI.nAlarmSafeties := -1;
		fSetAlarm( sMsg := GVL_AlarmMessage.TS1 );
	END_IF
	IF GVL_IO.DI_LS1 THEN
		GVL_HMI.nAlarmS_LS1 := 1;
	ELSE
		GVL_HMI.nAlarmS_LS1 := -1;
		GVL_HMI.nAlarmSafeties := -1;
		fSetAlarm( sMsg := GVL_AlarmMessage.LS1 );
	END_IF
	IF GVL_IO.DI_ESR1 THEN
		GVL_HMI.nAlarmS_ESR1 := 1;
	ELSE
		GVL_HMI.nAlarmS_ESR1 := -1;
		GVL_HMI.nAlarmSafeties := -1;
		fSetAlarm( sMsg := GVL_AlarmMessage.ESR1 );
	END_IF
	IF GVL_IO.DI_24VDC_CB_OK THEN
		GVL_HMI.nAlarmS_24DC := 1;
	ELSE
		GVL_HMI.nAlarmS_24DC := -1;
		GVL_HMI.nAlarmSafeties := -1;
		fSetAlarm( sMsg := GVL_AlarmMessage.DC );
	END_IF
END_IF

IF NOT GVL_HMI.o_bAlarmActive THEN
	fCoreSwaging();
	fOilPump();
	fCorePress();
	fCasingVibratoryBowl1();
	fCoreVibratoryBowl2();
END_IF

fTransmitStatesToHMI();

// release commands
IF GVL_HMI.i_nCmd_ClearCount = 2 THEN GVL_HMI.i_nCmd_ClearCount := 0; END_IF
IF GVL_HMI.i_nCmd_Reset = 2 THEN GVL_HMI.i_nCmd_Reset := 0; END_IF
IF GVL_HMI.i_nCmd_ResetSetting = 2 THEN GVL_HMI.i_nCmd_ResetSetting := 0; END_IF
IF GVL_HMI.i_nCmd_ResetAlarm = 2 THEN GVL_HMI.i_nCmd_ResetAlarm := 0; END_IF
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="717" Count="100" />
      <LineId Id="444" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>