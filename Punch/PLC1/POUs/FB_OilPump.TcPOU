<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_OilPump" Id="{eb1edbee-9a4b-4f1e-8695-a5d69ca2499b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_OilPump
VAR_INPUT
	i_bCallForCyl: BOOL := TRUE;
END_VAR
VAR_OUTPUT
END_VAR
VAR
    iState : INT := 0;
	FeedbackTimer : TON;
    DelayTimer : TON;
	fSetAlarm : FB_SetAlarm;
	fCheckFeedback : FB_CheckFeedback;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF GVL_HMI.i_nCmd_Reset = 2 THEN
	IF 20 <= iState AND iState <= 29 THEN
		iState := 0;
	END_IF 
END_IF

CASE iState OF
    0: (* Pump Off, Not Enabled *)
        iState := 10;

    10: (* Pump Enabled from Other Routine *)
		IF GVL_IO.DI_M1 THEN
			DelayAndAdvance( GVL_InitialSetting.PUMP_FAN_DelayTime, iState+1 );
		END_IF
	11:
		GVL_IO.DO_M2 := TRUE;
	    (* Inhibit Pump if DI1.4 or DI1.5 goes Low *)
        IF (NOT GVL_IO.DI_LS1) OR (NOT GVL_IO.DI_TS1) THEN
			GVL_IO.DO_M1 := FALSE;
			GVL_IO.DO_M2 := FALSE;
            iState := iState + 1;
        END_IF
	12: // check to off pump
		IF NOT GVL_IO.DI_M1 THEN
			fCheckFeedback( t := E_FT.PUMP, FeedbackTimer := FeedbackTimer );
		ELSE
			iState := (iState + 10) / 10 * 10;
        END_IF

    20: (* Fault Handling: Check DI1.3 Feedback *)
        (* Start 3-second timer to check for DI1.3 feedback *)
        DelayAndAdvance( GVL_InitialSetting.PUMP_RestartingTime, iState+1 );
	21:
        IF NOT GVL_IO.DI_M1 THEN
			GVL_HMI.i_nPumpState := -1;
			fSetAlarm( sMsg:=GVL_AlarmMessage.PUMP );
			iState := iState / 10 * 10;
		ELSE
			iState := (iState + 10) / 10 * 10;
        END_IF
END_CASE]]></ST>
    </Implementation>
    <Method Name="DelayAndAdvance" Id="{c0f40f36-8a2d-4f35-96c3-ddd282aa94ff}">
      <Declaration><![CDATA[METHOD DelayAndAdvance : BOOL
VAR_INPUT
	i_nDelayTime: INT;	// ms
	i_nNextState: INT;
END_VAR

VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT DelayTimer.IN THEN
    DelayTimer(IN := TRUE, PT := INT_TO_TIME(i_nDelayTime));
ELSE
    IF DelayTimer.Q THEN 
        iState := i_nNextState; 
    END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_OilPump">
      <LineId Id="164" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="46" Count="2" />
      <LineId Id="51" Count="1" />
      <LineId Id="115" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="134" Count="1" />
      <LineId Id="128" Count="1" />
      <LineId Id="133" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="74" Count="4" />
      <LineId Id="81" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="139" Count="1" />
      <LineId Id="96" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_OilPump.DelayAndAdvance">
      <LineId Id="8" Count="5" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>