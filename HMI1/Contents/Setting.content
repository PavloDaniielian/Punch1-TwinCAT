<div id="Setting" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="1024" data-tchmi-height="620" data-tchmi-creator-viewport-width="1024" data-tchmi-creator-viewport-height="600">
<div id="btnResetCore" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="16" data-tchmi-left-unit="px" data-tchmi-text="Reset" data-tchmi-top="479" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="40">



<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "btnResetCore.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "TcHmi.Controls.Helpers.showMessage(",
          "    'Reset Confirmation', ",
          "    'Will you really reset this machine?', ",
          "    TcHmi.Controls.Helpers.MessageBoxButton.YesNo, ",
          "    TcHmi.Controls.Helpers.MessageBoxIcon.Question, ",
          "    function(result) {",
          "        if (result === 'Yes') {",
          "            // Set the reset variable to TRUE in PLC",
          "            TcHmi.Symbol.writeEx('PLC1.GVL_HMI.i_bReset', true, function(data) {",
          "                if (data.error === TcHmi.Errors.NONE) {",
          "                    console.log('Reset signal sent.');",
          "                }",
          "            });",
          "        }",
          "    }",
          ");",
          ""
        ],
        "injectContextObject": true,
        "asyncWait": true,
        "waitMode": "Asynchronous"
      }
    ]
  }
]
</script>
</div>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "angle": 0.0,
  "stopPoints": [
    {
      "color": "rgba(112, 112, 112, 1)",
      "stop": "0%"
    },
    {
      "color": "rgba(176, 176, 176, 1)",
      "stop": "100%"
    }
  ]
}
</script>
<div id="lblOverViewTitle_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="51" data-tchmi-height-unit="px" data-tchmi-left="15" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="981" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text="Setting Page" data-tchmi-text-font-size="40" data-tchmi-text-font-weight="Bold">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="btnSettingBasic" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="16" data-tchmi-left-unit="px" data-tchmi-text="Basic" data-tchmi-top="132" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="40" data-tchmi-text-horizontal-alignment="Center" data-tchmi-is-enabled="false">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "btnSettingBasic.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%rgnSettingContent::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/Setting/Basic.content"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingBasic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingHydaulic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingPneumatic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="btnSettingHydaulic" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="16" data-tchmi-left-unit="px" data-tchmi-text="Hydaulic" data-tchmi-top="205" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="40" data-tchmi-text-horizontal-alignment="Center">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "btnSettingHydaulic.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%rgnSettingContent::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/Setting/Hydaulic.content"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingBasic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingHydaulic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingPneumatic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="btnSettingPneumatic" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="16" data-tchmi-left-unit="px" data-tchmi-text="Pneumatic" data-tchmi-top="281" data-tchmi-top-unit="px" data-tchmi-width="200" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="40" data-tchmi-text-horizontal-alignment="Center">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "btnSettingPneumatic.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%rgnSettingContent::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/Setting/Pneumatic.content"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingBasic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingHydaulic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%btnSettingPneumatic::IsEnabled%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/Boolean",
          "value": false
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="rgnSettingContent" data-tchmi-type="TcHmi.Controls.System.TcHmiRegion" data-tchmi-height="530" data-tchmi-height-unit="px" data-tchmi-left="239" data-tchmi-left-unit="px" data-tchmi-top="71" data-tchmi-top-unit="px" data-tchmi-width="770" data-tchmi-width-unit="px" data-tchmi-target-content="Contents/Setting/Basic.content">
</div>
</div>