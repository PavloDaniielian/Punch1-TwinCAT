<div id="Overview" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="13" data-tchmi-left="0" data-tchmi-width="1024" data-tchmi-height="465" data-tchmi-creator-viewport-width="1024" data-tchmi-creator-viewport-height="600">

    <div id="TcHmi_Controls_Beckhoff_TcHmiImage_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="446" data-tchmi-height-unit="px" data-tchmi-left="6" data-tchmi-left-unit="px" data-tchmi-src="Images/machine.png" data-tchmi-top="13" data-tchmi-top-unit="px" data-tchmi-width="1014" data-tchmi-width-unit="px" data-tchmi-zindex="0">


    </div>

    <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
        {
        "left": 0,
        "right": 0,
        "top": 0,
        "bottom": 0,
        "leftUnit": "px",
        "rightUnit": "px",
        "topUnit": "px",
        "bottomUnit": "px"
        }
    </script>



    <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
        {
        "topLeft": 0.0,
        "topRight": 0.0,
        "bottomLeft": 0.0,
        "bottomRight": 0.0,
        "topLeftUnit": "px",
        "topRightUnit": "px",
        "bottomLeftUnit": "px",
        "bottomRightUnit": "px"
        }
    </script>

    <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
        {
        "left": "Solid",
        "right": "Solid",
        "top": "Solid",
        "bottom": "Solid"
        }
    </script>



    <script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
        {
        "color": "None"
        }
    </script>

    <div id="sttCyl2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="903" data-tchmi-left-unit="px" data-tchmi-top="332" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">

        

        <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder2State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder2State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder2State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl2::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl2::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
    <div id="sttCyl1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="896" data-tchmi-left-unit="px" data-tchmi-top="368" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0" data-tchmi-is-enabled="true">


        <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>























<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder1State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/INT",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder1State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "FunctionExpression",
                          "functionExpression": "%f%%s%PLC1.GVL_HMI.i_nCylinder1State%/s%%/f%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": "0"
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl1::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl1::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttCyl3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="524" data-tchmi-left-unit="px" data-tchmi-top="328" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">


        <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder3State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder3State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl3::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder3State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl3::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl3::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiToggleButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="23" data-tchmi-height-unit="px" data-tchmi-left="837" data-tchmi-left-unit="px" data-tchmi-text="Cyl1 fault" data-tchmi-top="389" data-tchmi-top-unit="px" data-tchmi-width="51" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButton.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%ctrl%TcHmiToggleButton::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": []
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiToggleButton_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="23" data-tchmi-height-unit="px" data-tchmi-left="893" data-tchmi-left-unit="px" data-tchmi-text="Cyl1 E" data-tchmi-top="390" data-tchmi-top-unit="px" data-tchmi-width="57" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButton_1.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%ctrl%TcHmiToggleButton_1::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderExtended"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderRetracted"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttCyl4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="518" data-tchmi-left-unit="px" data-tchmi-top="370" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">


        <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder4State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder4State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl4::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder4State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl4::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl4::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttCyl7" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="270" data-tchmi-left-unit="px" data-tchmi-top="237" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">


        <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder7State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder7State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl7::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder7State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl7::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl7::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPCyl1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="968" data-tchmi-left-unit="px" data-tchmi-top="285" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">


        <script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nPCylinder1State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nPCylinder1State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPCyl1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nPCylinder1State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttPCyl1::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttPCyl1::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttCyl6" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="125" data-tchmi-left-unit="px" data-tchmi-top="357" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder6State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder6State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl6::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder6State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl6::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl6::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttCyl5" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="421" data-tchmi-left-unit="px" data-tchmi-top="358" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0" data-tchmi-is-enabled="true">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nCylinder5State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder5State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttCyl5::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nCylinder5State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl5::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttCyl5::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttESR1_L1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="44" data-tchmi-left-unit="px" data-tchmi-top="98" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    






<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bESR1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bESR1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_L1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateNormal"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_L1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttESR1_L2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="44" data-tchmi-left-unit="px" data-tchmi-top="374" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    






<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bESR1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bESR1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_L2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateNormal"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_L2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttESR1_R1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="968" data-tchmi-left-unit="px" data-tchmi-top="91" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    






<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bESR1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bESR1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_R1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateNormal"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_R1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttESR1_R2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="968" data-tchmi-left-unit="px" data-tchmi-top="396" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    








<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bESR1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bESR1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_R2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateNormal"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_R2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPCy2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="714" data-tchmi-left-unit="px" data-tchmi-top="257" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    






<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_nPCylinder2State%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_nPCylinder2State%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/INT",
                  "value": 0
                },
                "compareOperator": "<",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPCy2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "CylinderFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "Condition",
                "active": true,
                "parts": [
                  {
                    "if": [
                      {
                        "compare1": {
                          "objectType": "Symbol",
                          "valueType": "tchmi:general#/definitions/String",
                          "symbolExpression": "%s%PLC1.GVL_HMI.i_nPCylinder2State%/s%"
                        },
                        "compare2": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:general#/definitions/INT",
                          "value": 0
                        },
                        "compareOperator": "==",
                        "logic": null
                      }
                    ],
                    "then": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttPCy2::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderExtended"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  },
                  {
                    "else": [
                      {
                        "objectType": "WriteToSymbol",
                        "active": true,
                        "symbolExpression": "%ctrl%sttPCy2::ClassNames%/ctrl%",
                        "value": {
                          "objectType": "StaticValue",
                          "valueType": "tchmi:framework#/definitions/ClassNameList",
                          "value": [
                            "CylinderRetracted"
                          ]
                        },
                        "asyncWait": true
                      }
                    ]
                  }
                ],
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPE1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="730" data-tchmi-left-unit="px" data-tchmi-top="90" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    








<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bPE1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bPE1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPE2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="730" data-tchmi-left-unit="px" data-tchmi-top="116" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    










<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bPE2%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bPE2%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>


</div>
<div id="sttPE3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="765" data-tchmi-left-unit="px" data-tchmi-top="237" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    












<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bPE3%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bPE3%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE3::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE3::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="txtPT1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="17" data-tchmi-height-unit="px" data-tchmi-left="513" data-tchmi-left-unit="px" data-tchmi-text="%s%PLC1.GVL_HMI.i_rPT1%/s%" data-tchmi-top="281" data-tchmi-top-unit="px" data-tchmi-width="30" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Left" data-tchmi-text-font-size="12">

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="txtPT2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="17" data-tchmi-height-unit="px" data-tchmi-left="470" data-tchmi-left-unit="px" data-tchmi-text="%s%PLC1.GVL_HMI.i_rPT2%/s%" data-tchmi-top="304" data-tchmi-top-unit="px" data-tchmi-width="30" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Left" data-tchmi-text-font-size="12">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblProductCount" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="21" data-tchmi-height-unit="px" data-tchmi-left="19" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="73" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text="ProductCount:">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="txtProductCount" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="21" data-tchmi-height-unit="px" data-tchmi-left="94" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="45" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Left" data-tchmi-text="%s%PLC1.GVL_HMI.nProductCount%/s%">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblProductCount_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="21" data-tchmi-height-unit="px" data-tchmi-left="146" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="73" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text="CasingCount:">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="txtCasingCount" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="21" data-tchmi-height-unit="px" data-tchmi-left="222" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="45" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Left" data-tchmi-text="%s%PLC1.GVL_HMI.nCasingCount%/s%">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblProductCount_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="21" data-tchmi-height-unit="px" data-tchmi-left="271" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="73" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text="CoreCount:">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="txtCoreCount" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="21" data-tchmi-height-unit="px" data-tchmi-left="346" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="45" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Left" data-tchmi-text="%s%PLC1.GVL_HMI.nCoreCount%/s%">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="btnReset" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="40" data-tchmi-height-unit="px" data-tchmi-left="865" data-tchmi-left-unit="px" data-tchmi-text="Reset" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="135" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "btnReset.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.GVL_HMI.i_bReset%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/BOOL",
          "value": true
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPE4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="742" data-tchmi-left-unit="px" data-tchmi-top="210" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    












<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bPE4%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bPE4%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE4::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE4::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPE5" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="785" data-tchmi-left-unit="px" data-tchmi-top="210" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    












<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bPE5%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bPE5%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE5::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPE5::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="sttPS1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="707" data-tchmi-left-unit="px" data-tchmi-top="174" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
            {
            "color": "None"
            }
        </script>



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    












<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bPS1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bPS1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPS1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttPS1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="lblDummy_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="417" data-tchmi-left-unit="px" data-tchmi-top="282" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL1" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="416" data-tchmi-left-unit="px" data-tchmi-top="261" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL2" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="416" data-tchmi-left-unit="px" data-tchmi-top="239" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL3" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="416" data-tchmi-left-unit="px" data-tchmi-top="218" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL4" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_5" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="357" data-tchmi-left-unit="px" data-tchmi-top="180" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL5" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_6" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="357" data-tchmi-left-unit="px" data-tchmi-top="158" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL6" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_7" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="357" data-tchmi-left-unit="px" data-tchmi-top="137" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL7" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_8" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="11" data-tchmi-height-unit="px" data-tchmi-left="357" data-tchmi-left-unit="px" data-tchmi-top="115" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL8" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_9" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="888" data-tchmi-left-unit="px" data-tchmi-top="358" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL1" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_10" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="896" data-tchmi-left-unit="px" data-tchmi-top="318" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL2" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_11" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="516" data-tchmi-left-unit="px" data-tchmi-top="316" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL3" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_12" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="512" data-tchmi-left-unit="px" data-tchmi-top="356" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL4" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_13" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="414" data-tchmi-left-unit="px" data-tchmi-top="346" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL5" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_14" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="117" data-tchmi-left-unit="px" data-tchmi-top="345" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL6" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="lblDummy_15" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="250" data-tchmi-left-unit="px" data-tchmi-top="237" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="CYL7" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-transform" type="application/json">
[
  {
    "transformType": "Rotate",
    "angle": -90.0
  }
]
</script>
</div>
<div id="lblDummy_16" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="940" data-tchmi-left-unit="px" data-tchmi-top="285" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PCYL1" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_17" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="707" data-tchmi-left-unit="px" data-tchmi-top="247" data-tchmi-top-unit="px" data-tchmi-width="28" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PCYL2" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_18" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="712" data-tchmi-left-unit="px" data-tchmi-top="90" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PE1" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_19" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="712" data-tchmi-left-unit="px" data-tchmi-top="116" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PE2" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_20" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="747" data-tchmi-left-unit="px" data-tchmi-top="238" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PE3" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_21" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="724" data-tchmi-left-unit="px" data-tchmi-top="211" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PE4" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_22" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="797" data-tchmi-left-unit="px" data-tchmi-top="211" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PE5" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_23" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="688" data-tchmi-left-unit="px" data-tchmi-top="175" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PS5" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_24" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="492" data-tchmi-left-unit="px" data-tchmi-top="285" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PT1:" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_25" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="450" data-tchmi-left-unit="px" data-tchmi-top="308" data-tchmi-top-unit="px" data-tchmi-width="19" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="PT2:" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="outCyl1R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="402" data-tchmi-left-unit="px" data-tchmi-top="280" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl1R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl1R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl1R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl1R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl1E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="447" data-tchmi-left-unit="px" data-tchmi-top="279" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl1E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl1E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl1E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl1E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl2E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="447" data-tchmi-left-unit="px" data-tchmi-top="260" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl2E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl2E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl2E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl2E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl2R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="402" data-tchmi-left-unit="px" data-tchmi-top="261" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl2R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl2R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl2R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl2R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl3E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="447" data-tchmi-left-unit="px" data-tchmi-top="237" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl3E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl3E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl3E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl3E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl3R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="402" data-tchmi-left-unit="px" data-tchmi-top="238" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl3R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl3R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl3R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl3R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl4E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="447" data-tchmi-left-unit="px" data-tchmi-top="217" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl4E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl4E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": false
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl4E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl4E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl4R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="402" data-tchmi-left-unit="px" data-tchmi-top="218" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl4R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl4R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl4R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl4R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl5E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="387" data-tchmi-left-unit="px" data-tchmi-top="179" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl5E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl5E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl5E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl5E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl5R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="342" data-tchmi-left-unit="px" data-tchmi-top="180" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl5R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl5R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl5R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl5R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl6E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="387" data-tchmi-left-unit="px" data-tchmi-top="158" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl6E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl6E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl6E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl6E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl6R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="342" data-tchmi-left-unit="px" data-tchmi-top="159" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl6R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl6R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl6R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl6R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl7E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="387" data-tchmi-left-unit="px" data-tchmi-top="136" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl7E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl7E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl7E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl7E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl7R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="342" data-tchmi-left-unit="px" data-tchmi-top="137" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl7R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl7R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl7R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl7R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl8E" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="387" data-tchmi-left-unit="px" data-tchmi-top="114" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl8E%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl8E%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl8E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl8E::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outCyl8R" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="342" data-tchmi-left-unit="px" data-tchmi-top="115" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bCyl8R%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bCyl8R%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl8R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outCyl8R::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outVB1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="458" data-tchmi-left-unit="px" data-tchmi-top="122" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bVB1%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bVB1%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outVB1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outVB1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="outVB2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEllipse" data-tchmi-height="12" data-tchmi-height-unit="px" data-tchmi-left="503" data-tchmi-left-unit="px" data-tchmi-top="121" data-tchmi-top-unit="px" data-tchmi-width="12" data-tchmi-width-unit="px" data-tchmi-stroke-thickness="0">
<script data-tchmi-target-attribute="data-tchmi-border-radius" type="application/json">
            {
            "topLeft": 50.0,
            "topRight": 50.0,
            "bottomLeft": 50.0,
            "bottomRight": 50.0,
            "topLeftUnit": "%",
            "topRightUnit": "%",
            "bottomLeftUnit": "%",
            "bottomRightUnit": "%"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
            {
            "left": "Solid",
            "right": "Solid",
            "top": "Solid",
            "bottom": "Solid"
            }
        </script>

        <script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
            {
            "left": 2,
            "right": 2,
            "top": 2,
            "bottom": 2,
            "leftUnit": "px",
            "rightUnit": "px",
            "topUnit": "px",
            "bottomUnit": "px"
            }
        </script>



        



        <script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
            {
            "color": "rgba(255, 255, 255, 1)"
            }
        </script>


    




<script data-tchmi-target-attribute="data-tchmi-fill-color" type="application/json">
{
  "color": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.i_bVB2%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%PLC1.GVL_HMI.i_bVB2%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outVB2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outVB2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="lblDummy_26" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="453" data-tchmi-left-unit="px" data-tchmi-top="108" data-tchmi-top-unit="px" data-tchmi-width="22" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="VB1" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="lblDummy_27" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="px" data-tchmi-left="498" data-tchmi-left-unit="px" data-tchmi-top="108" data-tchmi-top-unit="px" data-tchmi-width="22" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text="VB2" data-tchmi-text-font-size="8">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="TcHmiToggleButton_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="23" data-tchmi-height-unit="px" data-tchmi-left="433" data-tchmi-left-unit="px" data-tchmi-text="VBl1 On" data-tchmi-top="150" data-tchmi-top-unit="px" data-tchmi-width="57" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButton_3.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "symbolExpression": "%ctrl%TcHmiToggleButton_3::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outVB1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOn"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%outVB1::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateOff"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiToggleButton_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="23" data-tchmi-height-unit="px" data-tchmi-left="35" data-tchmi-left-unit="px" data-tchmi-text="DC On" data-tchmi-top="389" data-tchmi-top-unit="px" data-tchmi-width="57" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButton_4.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "symbolExpression": "%ctrl%TcHmiToggleButton_4::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_L2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateNormal"
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%sttESR1_L2::ClassNames%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ClassNameList",
                  "value": [
                    "StateFaulted"
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="btnReset_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="40" data-tchmi-height-unit="px" data-tchmi-left="398" data-tchmi-left-unit="px" data-tchmi-text="Clear Count" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="130" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "btnReset_1.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.GVL_HMI.nProductCount%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/INT",
          "value": 0
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.GVL_HMI.nCasingCount%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/INT",
          "value": 0
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.GVL_HMI.nCoreCount%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/INT",
          "value": 0
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>